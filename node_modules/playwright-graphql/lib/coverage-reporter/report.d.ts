import type { Reporter } from '@playwright/test/reporter';
export type Summary = {
    coverage?: string;
    coverageTotal?: string;
    covered?: string;
    operationsCoverageSummary?: string;
    operationsArgCoverage: {
        name: string;
        argsCoverage: string;
        covered: boolean;
    }[];
};
export default class GraphqlCoverageReport implements Reporter {
    private readonly operationsSchema;
    private readonly logUncoveredOperations;
    private readonly coverageFilePath;
    private readonly htmlFilePath;
    private readonly minCoveragePerOperation;
    private readonly saveGqlCoverageLog;
    private readonly saveHtmlSummary;
    private summary;
    constructor(options: {
        graphqlFilePath: string;
        coverageFilePath?: string;
        htmlFilePath?: string;
        logUncoveredOperations?: boolean;
        minCoveragePerOperation?: number;
        saveGqlCoverageLog?: boolean;
        saveHtmlSummary?: boolean;
    });
    onBegin(): Promise<void>;
    onEnd(): Promise<void>;
    onExit(): Promise<void>;
}
