import { APIRequestContext, APIResponse } from 'playwright-core';
import { DocumentNode } from 'graphql';
import 'json-bigint-patch';
type PostOptionsType = NonNullable<Parameters<APIRequestContext['post']>[1]>;
type PlaywrightRequesterOptions = {
    returnRawJson?: boolean;
    failOnEmptyData?: boolean;
} & Omit<PostOptionsType, 'data'>;
type Requester<C = {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R> | AsyncIterable<R>;
type RequesterOptions = {
    gqlEndpoint?: string;
    rawResponse?: boolean;
};
type GqlEndpoint = string;
export declare function getSdkRequester(client: APIRequestContext, options?: RequesterOptions | GqlEndpoint, requestHandler?: (request: () => Promise<APIResponse>) => Promise<APIResponse>): Requester<PlaywrightRequesterOptions>;
export {};
